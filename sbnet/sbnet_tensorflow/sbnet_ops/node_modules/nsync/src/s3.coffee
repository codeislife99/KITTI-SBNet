
knox = require 'knox'
mime = require 'mime'

class S3Transport

  constructor: (options) ->
    @key = options.key
    @secret = options.secret
    @bucket = options.bucket

  setup: (callback) ->
    @client = knox.createClient {@key, @secret, @bucket}
    callback()

  listDirectory: (dirname, callback) ->
    prefix = dirname.replace /^(.\/|\/)/g, ''
    @client.list {prefix}, (error, data) ->
      files = data?.Contents.map (item) -> item.Key
      callback error, files

  # s3 does not have explicit directories, just pass through
  makeDirectory: (dirname, callback) -> callback()
  deleteDirectory: (dirname, callback) -> callback()

  getFile: (filename, callback) ->
    @client.getFile filename, callback

  putFile: (filename, size, stream, callback) ->
    headers =
      'Content-Length': size
      'Content-Type': mime.lookup filename
    @client.putStream stream, filename, headers, callback

  deleteFile: (filename, callback) ->
    client.deleteFile filename, callback # FIXME: handle response? might need a .resume()

S3Transport.options =
  key:
    required: true
    description: 'S3 key'
  secret:
    required: true
    description: 'S3 secret'
  bucket:
    required: true
    description: 'S3 bucket'

module.exports = S3Transport
